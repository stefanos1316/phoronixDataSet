.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SWET 1"
.TH SWET 1 "2012-04-30" "AVRB" "Sustained Workload Efficiency Test"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
swet \- sustained workload efficiency test
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
swet [\-options]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Estimate processing efficiency.
.PP
`swet' is a benchmark for single to multiprocessor/multicore/multithread environments.
.PP
`swet' performs cpu/ram stress tests and emits the computed efficiency.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 1
\& basic parameters:
\&
\& \-C Hz     consider given Hz as system clock
\& \-d N      spawn N test sets as processes
\& \-R N      repeat each test N times
\& \-s set    file or string with tests (1) to run
\& \-t N      spawn N test sets as threads
\&
\& detail selection:
\&
\& \-D        show test description
\& \-E        show elapsed time
\& \-F        show test frequency (ops./sec)
\& \-I        show test id
\& \-N        show test/thread number (count)
\&
\& efficiency selection:
\&
\& \-a        absolute(raw) efficiency
\& \-c        combined(gross) efficiency
\& \-r        relative(specific) efficiency
\&
\& test selection:
\&
\& \-B        basic test
\& \-Q        quick tests
\& \-S        slow tests
\& \-Z        whole test
\&
\& footer flags:
\&
\& \-A        report averages
\& \-T        report totals
\& \-O text   one\-liner comment
\&
\& output flags:
\&
\& \-\-csv     output in CSV format
\& \-\-frame   output in ASCII\-characters framed boxes
\& \-\-ansi    output in ANSI\-line\-chars. framed boxes
\& \-\-html    output in HTML
\& \-\-border  visible html table border
\& \-\-dash    vertical separators
\& \-\-minut   description minutiae
\&
\& operation flags:
\&
\& \-h        show host info
\& \-H        print headers
\& \-i        set session id (processes)
\& \-j        join threads until completion
\& \-l path   master log file
\& \-L        full(long) detail report
\& \-n        use nanosecond precision (if available)
\& \-o secs   timeout (per test)
\& \-V        show version info and exit
\& \-v        verbose output
\& \-w        wait threads until completion (default)
\& \-Y        run each test (2) as a thread
\& \-\-demo    quick check (3)
\&
\& notes:
\&
\& (1) space\- , tab\- , or comma\-separated test numbers
\&     and/or ranges like first:last
\&
\& (2) valid only for \*(Aqthread\-able/\-safe\*(Aq tests
\&
\& (3) \*(Aq\-s\*(Aq , \*(Aq\-\-demo\*(Aq and \*(Aq$SWETSET\*(Aq are mutually exclusive
.Ve
.SH "USAGE"
.IX Header "USAGE"
Without any options, `swet' performs a full test with basic output.
.PP
`swet' can be interrupted at any time with '^C' (Control+C).
.SH "FILES"
.IX Header "FILES"
.Vb 2
\& swet*.log              per process/thread log file(s)
\& /tmp/swet*.log         swet\*(Aqs log file(s)
.Ve
.SH "DIRECTORIES"
.IX Header "DIRECTORIES"
.Vb 1
\& /usr/local/bin         swet\*(Aqs default executable path
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Example 1: perform the 'basic' test set with detailed output.
.PP
.Vb 1
\& $ swet \-B
.Ve
.PP
Example 2: same thing, with \s-1HTML\s0 formatting.
.PP
.Vb 1
\& $ swet \-B \-\-html
.Ve
.PP
Example 3: spawn two background processes, each one to perform the 'basic' test set.
.PP
.Vb 1
\& $ swet \-B \-d 2
.Ve
.PP
Example 4: create two threads, each one to perform the 'basic' test set.
.PP
.Vb 1
\& $ swet \-B \-t 2
.Ve
.PP
Example 5: two processes, each one running two threads, so four 'basic' test sets concurrently.
.PP
.Vb 1
\& $ swet \-B \-d 2 \-t 2
.Ve
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.Vb 2
\& TERM           The value of the TERM environment variable may affect
\&                the output of \`swet\*(Aq.
.Ve
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
The following exit values are returned:
.PP
.Vb 1
\& 0                      No errors of any kind.
\&
\& >0                     An error occurred.
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.Vb 1
\& ENOMEM         Scant memory to perform some of the tests.
\&
\& EACCES         Permission denied (POSIX.1)
\&
\&                Search permission is denied for
\&                a component of the path prefix
\&                of a given <pathname>.
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIopm\fR\|(1), \fIvdt\fR\|(1).
.SH "NOTES"
.IX Header "NOTES"
Ordinarily, `swet' does not require `root' privileges or \s-1SUID\s0 file permissions.
.PP
The \s-1INT\s0, and \s-1TERM\s0 signals are caught by `swet', allowing for an orderly quit.
.SH "CAVEATS"
.IX Header "CAVEATS"
The 'quick' tests are considered to run 'quickly' on processor speeds above 1GHz.
.PP
On older hardware, even the 'quick' tests can take quite a few seconds to complete.
.SH "BUGS"
.IX Header "BUGS"
A screen with less than 80 columns results in garbled output if full/long detail is selected.
.PP
Not all possibly harmfull/misleading/nonsensical combinations of the options are prevented 
nor handled in the appropriate manner, 
and such use possibly may (and most certainly will) cause unpredictable results.
.SH "AUTHOR"
.IX Header "AUTHOR"
The original and current versions of `swet'
consist of code and documentation written by:
.PP
.Vb 3
\&        Alexandre Botao           http://botao.org
\&        botao@unix.net 
\&        botao@linux.sh            alexandre@botao.org
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 1
\&        Copyright (C) 2011 Alexandre Botao
.Ve
.SH "LICENSE"
.IX Header "LICENSE"
`swet' is `Free and Open Source Software' (\s-1FOSS\s0),
and is licensed under the \s-1GNU\s0 \s-1GENERAL\s0 \s-1PUBLIC\s0 \s-1LICENSE\s0
Version 3 (the \*(L"License\*(R");
.PP
You may not use `swet' except in compliance with the License.
You may obtain a copy of the License at
.PP
.Vb 1
\&        http://www.gnu.org/licenses/
.Ve
.PP
Additionally, a copy of the License is distributed along with `swet'
in a file called '\s-1LICENSE\s0';
.SH "SUPPORT"
.IX Header "SUPPORT"
.Vb 2
\& Commercial support is NOT available for \`swet\*(Aq.
\& Suggestions and/or bug reports are very welcome.
.Ve
.SH "DISCLAIMER"
.IX Header "DISCLAIMER"
`swet' is distributed on an ``\s-1AS\s0 \s-1IS\s0'' basis, 
\&\s-1WITHOUT\s0 \s-1ANY\s0 \s-1WARRANTY\s0 \s-1OR\s0 \s-1CONDITIONS\s0 \s-1OF\s0 \s-1ANY\s0 \s-1KIND\s0, 
either express or implied. 
See the License for the specific language 
governing permissions and limitations under the License.
