
/*
 *	this is the TODO file for SWET (the Sustained Workload/Efficiency Test) by <botao.org>
 *
 *	it is more of a collection of ideas, plans, reminders, thoughts, epiphanies, clues
 *	that may give a glimpse of what is yet to come,
 *	although not in an orderly manner...
 *
 *										Apr'12			alexandre botao
 */

	impl. mt-safe timeout (alarm) ... -o secs
		*** using timer_create (*THREAD*) ***

	bit-field tests...

	add mem(set,cpy,cmp) , (set,cpy,cmp)mem : byte8, int32, int64, longdouble128,

	replace MAXDAEMON & MAXTHREAD by var's
		+ calloc() 
		+ cmdlin flags ...

	*** FIX ***
		- sol8, hpx1111 zest
		- miniset default prints garbage or last line... ***
		- trailing space ...
		- snout ANSI thread-aware ***
		- html m-thr
		- epitomiz box ...

	union results : gather+log(sep/y) *** using dna-str ***

	xml

	auto-pilot : threads from 1-to-N or 1 ... til notch avg drops below <given>% of best-avg (50%,75%)

	devise flags for each description detail .. and if'em out

	reorg fun()s & #IDs ...

		ALL : 1M , 10M , 100M , 1B
		template : for ( long = ... wherever fits (base=601)

	float,double : x += PILD [ -500000 , 500000 ] (1M) ; 10M,100M,1B ... for ( long ; ...

	trigz
tan
	sqrtz
cbrt
	logz
exp
	powz

	int	+=/*%
	float +-/*

	? fmod ?

		xml to generate a db of results
			(w/ sys cfg info: model,#cpu,clock,ram etc)

	timestat() - v. mtx.c

	file i/o (creat/fill/copy/...)

	def. flag bits for
		trigz : seq/y & rand/y
		mathz : trigz + sqrtz + logz + ...

	fun() to complete test flag bits based on descr.items(type,scope)
		int, signed/uns, 

	delayed/barrier start of testsets

	devise test to use given % of cpu(s)

	? each tsi should have its own mutex ?

	daemons to inform master of its results,
		so they can be epitomized as well ;

	visuit : visual feedback ...
	augmit : more tests ...

	*** LAB ***
		- (BUGUNTU) erratic snout(csv,frame) glitch : swetheader m-thr - compiler/libthread/stdio

/*
 * vi:nu ts=4
 */
