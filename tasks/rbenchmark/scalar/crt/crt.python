#!/usr/bin/python
# I define GCD and LCM inside the run function

def gcd(m, n):
    while (n != 0):
        t = n
        n = m % n
        m = t 
    return m

def lcm(m,n):
    return m * n / gcd(m,n)


def run(rep=10000):
    #construct the input
    n = 40
    residual = range(1,n+1) #n length vec
    divisor = range(2,n+2) #n length vec
    for iter in range(rep):
        a = divisor[0]
        r = residual[0]
        for i in range(1,n):
            while(r % divisor[i] != residual[i]):
                r = r + a
            a = lcm(a, divisor[i]);
    print(r)

from sys import argv
rep = 100
if(len(argv) > 1):
    rep = int(argv[1])
run(rep)